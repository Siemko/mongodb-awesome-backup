# This file would be executed from e2e.sh
version: '3'

services:
  # test for backup in command mode
  app_default: &app_default
    build:
      context: ../
      dockerfile: Dockerfile.test
    depends_on:
      - mongo
      - s3proxy
    links:
      - s3proxy:s3proxy
      - mongo:mongo
    env_file:
      - .env
    environment:
      - S3_TARGET_BUCKET_URL=s3://app_default/
    command:
      - backup
      - prune
      - list
    entrypoint:
      "dockerize
       -wait http://s3proxy:80/app_default/
       -wait tcp://mongo:27017
       -timeout 60s
       /opt/bin/entrypoint.sh"

  # test for backup in cron mode
  app_backup_cronmode:
    <<: *app_default
    links:
      - s3proxy:s3proxy
      - mongo:mongo
    environment:
      - S3_TARGET_BUCKET_URL=s3://app_backup_cronmode/
      - CRONMODE=true
      - CRON_EXPRESSION=* * * * *
    entrypoint:
      "dockerize
       -wait http://s3proxy:80/app_backup_cronmode/
       -wait tcp://mongo:27017
       -timeout 60s
       /opt/bin/entrypoint.sh"

  # test for restore
  app_restore:
    <<: *app_default
    links:
      - s3proxy:s3proxy
      - mongo:mongo
    environment:
      - S3_TARGET_BUCKET_URL=s3://app_restore/
      - S3_TARGET_FILE=backup-${TODAY}.tar.bz2
    command:
      - backup
      - restore
    entrypoint:
      "dockerize
       -wait http://s3proxy:80/app_restore/
       -wait tcp://mongo:27017
       -timeout 60s
       /opt/bin/entrypoint.sh"

  # backup target (empty)
  mongo:
    image: mongo:3.4
    environment:
      - TZ=Asia/Tokyo

  # initialize S3 bucket for test
  init_s3proxy:
    build:
      context: ./
      dockerfile: Dockerfile.util
    entrypoint:
      "dockerize
       -wait tcp://s3proxy:80
       -timeout 60s /bin/bash -c
        'curl --request PUT http://s3proxy:80/app_default 
         && curl --request PUT http://s3proxy:80/app_backup_cronmode
         && curl --request PUT http://s3proxy:80/app_restore'"

  # backup target (AWS S3 mock)
  s3proxy:
    image: andrewgaul/s3proxy:travis-1232
    environment:
      - S3PROXY_AUTHORIZATION=none
    expose:
      - 80
    ports:
      - 10080:80
